<template>
<vx-card>
<h3>{{ editMode ? 'Edit Data' : 'Tambah Data' }}</h3>
  <form-wizard color="rgba(var(--vs-primary), 1)" :title="null" :subtitle="null" finishButtonText="Tambah"  backButtonText="Kembali" nextButtonText="Selanjutnya"  @on-complete="createRekapKegiatan(program,kegiatan,pekerjaan,desa,kecamatan,nomor_kontrak,nilai_kontrak,nama_rekanan,tgl_mulai,tgl_selesai)">
      <tab-content title="Step 1" class="mb-5" icon="feather icon-home">
          <!-- tab 1 content -->
          <div class="vx-row">
              <div class="vx-col md:w-1/2 w-full mt-5">
                  <vs-input label="Kegiatan"  v-model="newKontrak.kegiatan" class="w-full" />
              </div>
              <div class="vx-col md:w-1/2 w-full mt-5">
                  <vs-input label="Pekerjaan"  v-model="newKontrak.pekerjaan" class="w-full" />
              </div>
               <div class="vx-col md:w-1/2 w-full mt-5">
                  <vs-input type="text" label="Desa" name="desa" v-model="newKontrak.desa" class="w-full" />
              </div>
              <div class="vx-col md:w-1/2 w-full mt-5">
                  <vs-input label="Kecamatan"  v-model="newKontrak.kecamatan" class="w-full" />
              </div>
             <!--- <div class="vx-col md:w-1/5 w-full mt-5">
                  <vs-select v-model="kecamatan" @change="kecamatan" name="kecamatan" item-value="kecamatan" class="w-full select-large" label="Kecamatan">
                     <vs-select-item :value="location.nama_kecamatan" v-for="location in locations" :key="location.id" :text="location.nama_kecamatan" class="w-full" />
                  </vs-select>
              </div>
                <div class="vx-col md:w-1/5 w-full mt-5">    
                    <vs-select v-model="desa"  name="desa" item-value="desa" class="w-full select-large" label="Kecamatan">
                     <vs-select-item v-for="location in locations" v-bind:value="location.desa" :key="location.desa_id.desa" :text="location.desa.desa_id" :class="w-full" />
                  </vs-select>          
                </div>
                -->
          </div>
      </tab-content>

      <!-- tab 2 content -->
      <tab-content title="Step 2" class="mb-5" icon="feather icon-briefcase">
          <div class="vx-row">
              <div class="vx-col md:w-1/2 w-full">
                  <vs-input label="Nomor Kontrak" v-model="newKontrak.nomor_kontrak" class="w-full mt-4" />
                  <vs-input label="Tanggal Kontrak"  v-model="newKontrak.tgl_kontrak" class="w-full mt-4" />
              </div>
              <div class="vx-col md:w-1/2 w-full">
                  <vs-input label="Nilai Kontrak" v-model="newKontrak.nilai_kontrak" class="w-full mt-4" />
                  <vs-input label="Nama Rekanan" v-model="newKontrak.nama_rekanan" class="w-full mt-4" />
              </div>
          </div>
      </tab-content>

      <!-- tab 3 content -->
      <tab-content title="Step 3" class="mb-5" icon="feather icon-image">
          <div class="vx-row">
              <div class="vx-col md:w-1/2 w-full">
                  <vs-input type="date" label="Tanggal Mulai" v-model="newKontrak.tgl_mulai" class="w-full mt-5" />
              </div>
              <div class="vx-col md:w-1/2 w-full">
                  <vs-input type="date" label="Tanggal Selesai" v-model="newKontrak.tgl_selesai" class="w-full mt-5" />
              </div>
          </div>
      </tab-content>
      <pre></pre>
  </form-wizard>
</vx-card> 
</template>

<script>
import {FormWizard, TabContent} from 'vue-form-wizard'
import 'vue-form-wizard/dist/vue-form-wizard.min.css'
import {createRekapKegiatan, dataKontrak} from '@/graphql/dataKontrak.gql'
import VxCard from '../../components/vx-card/VxCard.vue'
import gql from "graphql-tag"

export default {
  data:() => ({
     newKontrak: {
        program: '',
        kegiatan: '',
        pekerjaan: '',
        desa: '',
        kecamatan: '',
        nomor_kontrak: '',
        nilai_kontrak: '',
        nama_rekanan: '',
        tgl_mulai: null,
        tgl_selesai: null,
        },
        getKontrakId: `
        query dataKontrak ($id: ID!) {
            rekapKegiatan (id: $id) {
                id
                pekerjaan
                kegiatan
                desa
                kecamatan
                nomor_kontrak
                nilai_kontrak
                nama_rekanan
                tgl_mulai
                tgl_selesai
                }
            }
        `,    
    }),

  computed:{
      editMode() {
          return !!this.$route.query.edit;
      }
  },


  methods: {
        createRekapKegiatan(){
        const program = this.newKontrak.program;
        const kegiatan = this.newKontrak.kegiatan;
        const pekerjaan = this.newKontrak.pekerjaan;
        const desa = this.newKontrak.desa;
        const kecamatan = this.newKontrak.kecamatan;
        const nomor_kontrak = this.newKontrak.nomor_kontrak;
        const nilai_kontrak = this.newKontrak.nilai_kontrak;
        const nama_rekanan = this.newKontrak.nama_rekanan;
        const tgl_mulai = this.newKontrak.tgl_mulai;
        const tgl_selesai = this.newKontrak.tgl_selesai;
        this.$apollo.mutate({
            mutation: createRekapKegiatan,
            variables:{
                program: newKontrak.program,
                kegiatan: newKontrak.kegiatan,
                pekerjaan: newKontrak.pekerjaan,
                desa: newKontrak.desa,
                kecamatan: newKontrak.kecamatan,
                nomor_kontrak: newKontrak.nomor_kontrak,
                nilai_kontrak: newKontrak.nilai_kontrak,
                nama_rekanan: newKontrak.nama_rekanan,
                tgl_mulai: newKontrak.tgl_mulai,
                tgl_selesai: newKontrak.tgl_selesai
            },
                    optimisticResponse: {
                      __typename: 'Mutation',
                      createRekapKegiatan: {
                        __typename: 'rekapKegiatan',
                        program,
                        kegiatan,
                        pekerjaan,
                        desa,
                        kecamatan,
                        nomor_kontrak,
                        nilai_kontrak,
                        nama_rekanan,
                        tgl_mulai,
                        tgl_selesai,   
                                },
                            },
            })
            window.location.replace("http://localhost:8080/2020/rekapkegiatan");
        },
        async getKontrak() {
            let {data} = await this.$apollo.query({
                query: gql`${this.getKontrakId}`,
                variables: {
                    id: this.$route.query.edit
                }
            });
            console.log("DATA", data); 
            this.newKontrak = data.rekapKegiatan;
        }
    },
    created(){
        if(this.editMode){
            this.getKontrak();
        }
    },

    components: {
        FormWizard,
        TabContent,
        VxCard
    }
}
</script>
        
